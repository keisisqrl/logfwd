var searchIndex = JSON.parse('{\
"logfwd":{"doc":"logfwd","t":[13,2,13,4,13,3,11,11,11,11,0,11,11,0,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,12,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11],"n":["Close","Error","Flush","FwdMsg","Message","Shutdown","borrow","borrow","borrow_mut","borrow_mut","clean_kill","clone","clone_into","drano","error","fmt","fmt","from","from","into","into","tls_send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","udp_recv","0","Handler","borrow","borrow_mut","from","into","into_future","new","poll","try_from","try_into","try_poll","type_id","Flusher","borrow","borrow_mut","from","into","into_future","new","poll","try_from","try_into","try_poll","type_id","ChannelClosed","Error","SinkDisconnected","TlsSocketError","UDPSocketError","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","0","0","Sender","borrow","borrow_mut","fmt","from","init","into","new","run","try_from","try_into","type_id","Receiver","borrow","borrow_mut","from","into","into_future","new","poll","try_from","try_into","try_poll","type_id"],"q":["logfwd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","logfwd::FwdMsg","logfwd::clean_kill","","","","","","","","","","","","logfwd::drano","","","","","","","","","","","","logfwd::error","","","","","","","","","","","","","logfwd::error::Error","","logfwd::tls_send","","","","","","","","","","","","logfwd::udp_recv","","","","","","","","","","",""],"d":["Tells the TLS/TCP stream to shut down","","Must be sent peridocially (use Flusher) to force the TLS …","<code>FwdMsg</code> is used for messaging between the sender and …","owned boxed u8 slice is the log msg to be forwarded","Shutdown message","","","","","clean_kill","","","Drano","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A future/task that returns only after the program receives …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new Handler Takes a reference to the send half of …","","","","","","<code>Flusher</code> is a custom future which never returns.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new Flusher future.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[1,0,1,0,1,0,2,1,2,1,0,2,2,0,0,2,1,2,1,2,1,0,2,2,1,2,1,2,1,0,3,0,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,6,0,6,6,6,6,6,6,6,6,6,6,6,7,8,0,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["shutdown",3]],[[["",0],["",0]]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["sender",3],["sender",3]]],[[["pin",3],["context",3]],["poll",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["u64",0],["sender",3],["sender",3]],["flusher",3]],[[["pin",3],["context",3]],["poll",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0]]],[[]],[[["string",3],["u16",0],["receiver",3,[["fwdmsg",4]]]],["sender",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["rawfd",6],["sender",3],["sender",3],["usize",0]],["receiver",3]],[[["pin",3],["context",3]],["poll",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["",0]],["typeid",3]]],"p":[[4,"FwdMsg"],[3,"Shutdown"],[13,"Message"],[3,"Handler"],[3,"Flusher"],[4,"Error"],[13,"UDPSocketError"],[13,"TlsSocketError"],[3,"Sender"],[3,"Receiver"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};